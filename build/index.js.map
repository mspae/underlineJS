{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index.js","js/baseline-ratio.js","js/guitar-string.js","js/index.js","js/multiple-underline.js","js/multiply-value.js","js/optimal-stroke-width-pos.js","js/point.js","js/single-underline.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Underline","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_typeof","Symbol","iterator","obj","constructor","root","factory","baselineRatio","undefined","elem","document","body","container","createElement","style","display","position","bottom","right","width","height","margin","padding","visibility","overflow","small","large","fontSize","innerHTML","appendChild","console","log","smalldims","getBoundingClientRect","largedims","removeChild","baselineposition","top",2,"guitarString","GuitarString","play_multi_sound","audiochannels","thistime","Date","getTime","getElementById","duration","src","load","play","ctx","startPoint","endPoint","strokeWidth","strokeColor","ratio","canvas","level","musicLevel","maxGrabDistance","maxControlDistance","lineWidth","strokeStyle","beginPath","moveTo","x","y","lineTo","globalCompositeOperation","stroke","currentMouseX","currentMouseY","lastMouseX","lastMouseY","waveInitX","waveInitY","waveCount","damping","thirdPoint","Point","userInControl","userPlucked","waveInControl","waveFinished","initState","lastRedraw","redrawActive","addEventListener","event","mouseOver","mouseMove","mouseLeave","mouseOut","touchDown","touchXY","touchUp","channel_max","navigator","userAgent","toLowerCase","indexOf","Array","Audio","circleCenter","dy1","dx1","dy2","dx2","aSlope","bSlope","centerX","centerY","dist","x0","y0","Math","sqrt","intersects","b","c","d","p","q","det","gamma","lambda","floor","prototype","layerX","layerY","radius","currentWaveDistance","pow","abs","lastRadius","lastWaveDistance","mouseInGrabRange","lastMouseOutGrabRange","mouseOutControlRange","lastMouseInControlRange","mouseCrossed","clear","update","waveX","waveY","cos","PI","draw","drawLine","drawArc","centerObject","angle","atan2","arc","./point",3,"underline","getElementStyles","element","$this","baselinePositionRatio","lineHeight","parseFloat","getComputedStyle","getPropertyValue","fontFamily","fontStyle","parentWidth","parentNode","offsetLeft","parentOffsetLeft","canvasLeft","textIndent","options","underlines","error","underlineStyles","text-underline-color","color","text-underline-position","text-underline-skip","skip","text-underline-width","querySelectorAll","forEach","el","elementStyles","MultipleUnderline","SingleUnderline","push","bind","requestAnimFrame","callback","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","animate","./baseline-ratio","./multiple-underline","./single-underline",4,"multipleUnderline","text","textContent","getContext","devicePixelRatio","left","font","multiplyValue","multipleRedrawActive","is_chrome","dotWidth","measureText","underlinePosition","userUnderlinePosition","adjustValue","optimalStrokeWidthPos","posY","lines","myStrings","words","match","line","linePositionY","firstLineCount","newWord","replace","testLine","testLineMetrics","testLineWidth","lineMetrics","tempLine","lineText","lineTextIndent","lineMeasureWidth","myString","drawUnderline","drawHoles","tempString","fillStyle","textBaseline","fillText","strokeText","clearRect","./guitar-string","./multiply-value","./optimal-stroke-width-pos",5,"MultiplyValue","value","multiplier","str","m","result",6,"OptimalStrokeWidthPos","round",7,"point",8,"singleUnderline","textWidth"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Underline = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/* Universal Module Definition */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('baselineRatio', [], function () {\n      return root.baselineRatio = factory();\n    });\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.baselineRatio = factory();\n  }\n})(undefined, function () {\n  var baselineRatio = function baselineRatio(elem) {\n    // Get the baseline in the context of whatever element is passed in.\n    elem = elem || document.body;\n\n    // The container is a little defenseive.\n    var container = document.createElement('div');\n    container.style.display = \"block\";\n    container.style.position = \"absolute\";\n    container.style.bottom = \"0\";\n    container.style.right = \"0\";\n    container.style.width = \"0px\";\n    container.style.height = \"0px\";\n    container.style.margin = \"0\";\n    container.style.padding = \"0\";\n    container.style.visibility = \"hidden\";\n    container.style.overflow = \"hidden\";\n\n    // Intentionally unprotected style definition.\n    var small = document.createElement('span');\n    var large = document.createElement('span');\n\n    // Large numbers help improve accuracy.\n    small.style.fontSize = \"0px\";\n    large.style.fontSize = \"2000px\";\n\n    small.innerHTML = \"X\";\n    large.innerHTML = \"X\";\n\n    container.appendChild(small);\n    container.appendChild(large);\n\n    console.log(elem);\n\n    // Put the element in the DOM for a split second.\n    elem.appendChild(container);\n    var smalldims = small.getBoundingClientRect();\n    var largedims = large.getBoundingClientRect();\n    elem.removeChild(container);\n\n    // Calculate where the baseline was, percentage-wise.\n    var baselineposition = smalldims.top - largedims.top;\n    var height = largedims.height;\n\n    return 1 - baselineposition / height;\n  };\n\n  return baselineRatio;\n});\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/* Universal Module Definition */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('guitarString', [], function () {\n      return root.guitarString = factory();\n    });\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.GuitarString = factory();\n  }\n})(undefined, function () {\n  var Point = require('./point');\n  var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n\n  //audio play multiple channels at the same time: http://www.storiesinflight.com/html5/audio.html\n  var channel_max = 10; // number of channels\n  var audiochannels = new Array();\n  for (var a = 0; a < channel_max; a++) {\n    // prepare the channels\n    audiochannels[a] = new Array();\n    audiochannels[a]['channel'] = new Audio(); // create a new audio object\n    audiochannels[a]['finished'] = -1; // expected end time for this channel\n  }\n\n  function play_multi_sound(s) {\n    for (var a = 0; a < audiochannels.length; a++) {\n      var thistime = new Date();\n      if (audiochannels[a]['finished'] < thistime.getTime()) {\n        // is this channel finished?\n        audiochannels[a]['finished'] = thistime.getTime() + document.getElementById(s).duration * 1000;\n        audiochannels[a]['channel'].src = document.getElementById(s).src;\n        audiochannels[a]['channel'].load();\n        audiochannels[a]['channel'].play();\n        break;\n      }\n    }\n  }\n\n  var circleCenter = function circleCenter(startPoint, thirdPoint, endPoint) {\n    var dy1 = thirdPoint.y - startPoint.y;\n    var dx1 = thirdPoint.x - startPoint.x;\n    var dy2 = endPoint.y - thirdPoint.y;\n    var dx2 = endPoint.x - thirdPoint.x;\n\n    var aSlope = dy1 / dx1;\n    var bSlope = dy2 / dx2;\n\n    var centerX = (aSlope * bSlope * (startPoint.y - endPoint.y) + bSlope * (startPoint.x + thirdPoint.x) - aSlope * (thirdPoint.x + endPoint.x)) / (2 * (bSlope - aSlope));\n    var centerY = -1 * (centerX - (startPoint.x + thirdPoint.x) / 2) / aSlope + (startPoint.y + thirdPoint.y) / 2;\n    var r = dist(centerX, centerY, startPoint.x, startPoint.y);\n\n    return {\n      x: centerX,\n      y: centerY,\n      r: r\n    };\n  };\n\n  var dist = function dist(x, y, x0, y0) {\n    return Math.sqrt((x -= x0) * x + (y -= y0) * y);\n  };\n\n  var intersects = function intersects(a, b, c, d, p, q, r, s) {\n    // returns true if the line from (a,b)->(c,d) intersects with (p,q)->(r,s)\n    var det, gamma, lambda;\n    det = (c - a) * (s - q) - (r - p) * (d - b);\n    if (det === 0) {\n      return false;\n    } else {\n      lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n      gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n      return 0 < lambda && lambda < 1 && 0 < gamma && gamma < 1;\n    }\n  };\n\n  var musicLevel = function musicLevel(startPoint, endPoint, ratio) {\n    var length = dist(startPoint.x, startPoint.y, endPoint.x, endPoint.y) / ratio;\n\n    var level = Math.floor(length / 30);\n    if (level > 19) {\n      level = 19;\n    }\n    level = 19 - level;\n    if (level < 10) {\n      level = '0' + level;\n    }\n    return level;\n  };\n\n  function GuitarString(ctx, startPoint, endPoint, strokeWidth, strokeColor, ratio) {\n    //ctor\n    this.ctx = ctx;\n    this.canvas = ctx.canvas;\n    this.startPoint = startPoint;\n    this.endPoint = endPoint;\n    this.strokeWidth = strokeWidth;\n    this.strokeColor = strokeColor;\n    this.ratio = ratio;\n\n    this.level = musicLevel(this.startPoint, this.endPoint, this.ratio);\n\n    // this.canvas.width = this.canvas.clientWidth;\n    // this.canvas.height = this.canvas.clientHeight*1.2;\n\n    this.maxGrabDistance = this.strokeWidth * 2;\n    this.maxControlDistance = this.strokeWidth * 6;\n\n    this.ctx.lineWidth = this.strokeWidth;\n    this.ctx.strokeStyle = this.strokeColor;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.startPoint.x, this.startPoint.y);\n    this.ctx.lineTo(this.endPoint.x, this.endPoint.y);\n    this.ctx.globalCompositeOperation = \"source-over\";\n    this.ctx.stroke();\n\n    this.currentMouseX;\n    this.currentMouseY;\n    this.lastMouseX;\n    this.lastMouseY;\n    this.waveInitX = (this.startPoint.x + this.endPoint.x) / 2;\n    this.waveInitY = this.startPoint.y - this.maxControlDistance;\n    this.waveCount = 0;\n    this.damping = 0.9;\n\n    this.thirdPoint = new Point((this.startPoint.x + this.endPoint.x) / 2, this.startPoint.y);\n\n    // state flags\n    this.userInControl = false;\n    this.userPlucked = false;\n    this.waveInControl = false;\n    this.waveFinished = false;\n    this.initState = true;\n    this.lastRedraw = false;\n    this.redrawActive = false;\n\n    //add event listener\n    var self = this;\n    this.canvas.addEventListener('mouseover', function (event) {\n      self.mouseOver(self, event);\n    }, false);\n\n    this.canvas.addEventListener('mousemove', function (event) {\n      self.mouseMove(self, event);\n    }, false);\n\n    this.canvas.addEventListener(\"mouseleave\", function (event) {\n      self.mouseLeave(self, event);\n    }, false);\n\n    this.canvas.addEventListener(\"mouseout\", function (event) {\n      self.mouseOut(self, event);\n    }, false);\n\n    this.canvas.addEventListener(\"touchstart\", function (event) {\n      self.touchDown(self, event);\n    }, false);\n    this.canvas.addEventListener(\"touchmove\", function (event) {\n      self.touchXY(self, event);\n    }, false);\n    this.canvas.addEventListener(\"touchend\", function (event) {\n      self.touchUp(self, event);\n    }, false);\n  }\n\n  GuitarString.prototype.mouseOver = function (self, event) {\n    // console.log('mouseOver');\n    this.currentMouseX = event.layerX * this.ratio;\n    this.currentMouseX = event.layerY * this.ratio;\n  };\n  GuitarString.prototype.mouseMove = function (self, event) {\n    // console.log('mouseMove');\n    this.lastMouseX = this.currentMouseX;\n    this.lastMouseY = this.currentMouseY;\n    this.currentMouseX = event.layerX * this.ratio;\n    this.currentMouseY = event.layerY * this.ratio;\n\n    var radius = circleCenter(new Point(this.startPoint.x, this.startPoint.y), new Point(this.currentMouseX, this.currentMouseY), new Point(this.endPoint.x, this.endPoint.y)).r;\n    var currentWaveDistance = radius - Math.sqrt(Math.pow(radius, 2) - Math.pow(Math.abs(this.endPoint.x - this.startPoint.x) / 2, 2));\n    var lastRadius = circleCenter(new Point(this.startPoint.x, this.startPoint.y), new Point(this.lastMouseX, this.lastMouseY), new Point(this.endPoint.x, this.endPoint.y)).r;\n    var lastWaveDistance = lastRadius - Math.sqrt(Math.pow(lastRadius, 2) - Math.pow(Math.abs(this.endPoint.x - this.startPoint.x) / 2, 2));\n\n    var mouseInGrabRange = currentWaveDistance < this.maxGrabDistance && this.currentMouseX > this.startPoint.x && this.currentMouseX < this.endPoint.x;\n\n    var lastMouseOutGrabRange = !(lastWaveDistance < this.maxGrabDistance && this.lastMouseX > this.startPoint.x && this.lastMouseX < this.endPoint.x);\n\n    var mouseOutControlRange = !(currentWaveDistance < this.maxControlDistance && this.currentMouseX > this.startPoint.x && this.currentMouseX < this.endPoint.x);\n\n    var lastMouseInControlRange = lastWaveDistance < this.maxControlDistance && this.lastMouseX > this.startPoint.x && this.lastMouseY < this.endPoint.x;\n\n    var mouseCrossed = intersects(this.lastMouseX, this.lastMouseY, this.currentMouseX, this.currentMouseY, this.startPoint.x, this.startPoint.y, this.endPoint.x, this.endPoint.y);\n\n    if (mouseInGrabRange && lastMouseOutGrabRange && !this.userInControl) {\n      // console.log('grab!');\n      this.initState = false;\n      this.userInControl = true;\n      this.waveInControl = false;\n      this.waveFinished = false;\n\n      this.redrawActive = true;\n    } else if (mouseOutControlRange && lastMouseInControlRange && this.userInControl) {\n      // console.log('boing!');\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.waveCount = 0;\n      // this.waveInitX = this.lastMouseX;\n      // this.waveInitY = this.lastMouseY;\n      this.waveInitX = (this.startPoint.x + this.endPoint.x) / 2;\n      this.waveInitY = this.endPoint.y + this.maxControlDistance;\n      // play audio\n      play_multi_sound('audio' + this.level);\n      // createjs.Sound.play('cello_' + this.level);\n    }\n\n    if (!this.userInControl && mouseCrossed) {\n      // console.log('i just plucked!');\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.redrawActive = true;\n      this.waveCount = 0;\n      this.waveInitX = (this.startPoint.x + this.endPoint.y) / 2;\n      this.waveInitY = this.endPoint.y + this.maxGrabDistance * 2 / 3;\n    }\n  };\n  GuitarString.prototype.mouseLeave = function (self, event) {\n    // console.log('mouseLeave');\n    if (this.userInControl) {\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.redrawActive = true;\n      this.waveCount = 0;\n\n      this.waveInitX = event.layerX * this.ratio;\n      this.waveInitY = event.layerY * this.ratio;\n    }\n  };\n  GuitarString.prototype.mouseOut = function (self, event) {\n    // console.log('mouseOut');\n  };\n  GuitarString.prototype.touchDown = function (self, event) {\n    // console.log('touchDown');\n    this.currentMouseX = event.layerX * this.ratio;\n    this.currentMouseX = event.layerY * this.ratio;\n  };\n  GuitarString.prototype.touchXY = function (self, event) {\n    // console.log('touchMove');\n    this.lastMouseX = this.currentMouseX;\n    this.lastMouseY = this.currentMouseY;\n    this.currentMouseX = event.layerX * this.ratio;\n    this.currentMouseY = event.layerY * this.ratio;\n\n    var radius = circleCenter(new Point(this.startPoint.x, this.startPoint.y), new Point(this.currentMouseX, this.currentMouseY), new Point(this.endPoint.x, this.endPoint.y)).r;\n    var currentWaveDistance = radius - Math.sqrt(Math.pow(radius, 2) - Math.pow(Math.abs(this.endPoint.x - this.startPoint.x) / 2, 2));\n    var lastRadius = circleCenter(new Point(this.startPoint.x, this.startPoint.y), new Point(this.lastMouseX, this.lastMouseY), new Point(this.endPoint.x, this.endPoint.y)).r;\n    var lastWaveDistance = lastRadius - Math.sqrt(Math.pow(lastRadius, 2) - Math.pow(Math.abs(this.endPoint.x - this.startPoint.x) / 2, 2));\n\n    var mouseInGrabRange = currentWaveDistance < this.maxGrabDistance && this.currentMouseX > this.startPoint.x && this.currentMouseX < this.endPoint.x;\n\n    var lastMouseOutGrabRange = !(lastWaveDistance < this.maxGrabDistance && this.lastMouseX > this.startPoint.x && this.lastMouseX < this.endPoint.x);\n\n    var mouseOutControlRange = !(currentWaveDistance < this.maxControlDistance && this.currentMouseX > this.startPoint.x && this.currentMouseX < this.endPoint.x);\n\n    var lastMouseInControlRange = lastWaveDistance < this.maxControlDistance && this.lastMouseX > this.startPoint.x && this.lastMouseY < this.endPoint.x;\n\n    var mouseCrossed = intersects(this.lastMouseX, this.lastMouseY, this.currentMouseX, this.currentMouseY, this.startPoint.x, this.startPoint.y, this.endPoint.x, this.endPoint.y);\n\n    if (mouseInGrabRange && lastMouseOutGrabRange && !this.userInControl) {\n      // console.log('grab!');\n      this.initState = false;\n      this.userInControl = true;\n      this.waveInControl = false;\n      this.waveFinished = false;\n\n      this.redrawActive = true;\n    } else if (mouseOutControlRange && lastMouseInControlRange && this.userInControl) {\n      // console.log('boing!');\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.waveCount = 0;\n      // this.waveInitX = this.lastMouseX;\n      // this.waveInitY = this.lastMouseY;\n      this.waveInitX = (this.startPoint.x + this.endPoint.x) / 2;\n      this.waveInitY = this.endPoint.y + this.maxControlDistance;\n      // play audio\n      play_multi_sound('audio' + this.level);\n    }\n\n    if (!this.userInControl && mouseCrossed) {\n      // console.log('i just plucked!');\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.redrawActive = true;\n      this.waveCount = 0;\n      this.waveInitX = (this.startPoint.x + this.endPoint.y) / 2;\n      this.waveInitY = this.endPoint.y + this.maxGrabDistance * 2 / 3;\n      // play audio\n      // play_multi_sound('audio' + this.level);\n    }\n  };\n  GuitarString.prototype.touchUp = function (self, event) {\n    // console.log('touchUp');\n    if (this.userInControl) {\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.redrawActive = true;\n      this.waveCount = 0;\n\n      this.waveInitX = event.layerX * this.ratio;\n      this.waveInitY = event.layerY * this.ratio;\n    }\n  };\n\n  GuitarString.prototype.clear = function () {\n    // clear\n    // if(this.redrawActive){\n    // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    // }\n  };\n\n  GuitarString.prototype.update = function () {\n    // console.log(this.redrawActive);\n    // if(this.redrawActive){\n    if (this.userInControl) {\n      this.thirdPoint = new Point(this.currentMouseX, this.currentMouseY);\n    }\n    if (this.waveInControl) {\n      var waveX = this.waveInitX;\n      var waveY = this.startPoint.y + (this.waveInitY - this.startPoint.y) * Math.cos(this.waveCount / 5 * Math.PI) * Math.pow(this.damping, this.waveCount);\n\n      if (Math.pow(this.damping, this.waveCount) > 0.03) {\n        // still waving ....\n        this.thirdPoint = new Point(waveX, waveY);\n        this.waveCount++;\n      } else {\n        // wave damped to a straight line, wave is finished\n        this.waveInControl = false;\n        this.waveFinished = true;\n        this.lastRedraw = true;\n        this.thirdPoint = new Point(waveX, waveY);\n      }\n    }\n    // }\n  };\n\n  GuitarString.prototype.draw = function () {\n    // if(this.redrawActive){\n    // draw stuff\n    // }\n    if (this.lastRedraw) {\n      this.drawLine();\n      this.lastRedraw = false;\n      this.redrawActive = false;\n    } else {\n      this.drawArc(this.startPoint, this.thirdPoint, this.endPoint);\n    }\n  };\n  GuitarString.prototype.drawLine = function () {\n    // draw a line instead of a flat curve when it stops redraw, pixel-perfect\n    this.ctx.lineWidth = this.strokeWidth;\n    this.ctx.strokeStyle = this.strokeColor;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.startPoint.x, this.startPoint.y);\n    this.ctx.lineTo(this.endPoint.x, this.endPoint.y);\n    this.ctx.globalCompositeOperation = \"source-over\";\n    this.ctx.stroke();\n  };\n\n  GuitarString.prototype.drawArc = function (startPoint, thirdPoint, endPoint) {\n    var ctx = this.ctx;\n    ctx.lineWidth = this.strokeWidth;\n    ctx.strokeStyle = this.strokeColor;\n\n    var centerObject = circleCenter(new Point(startPoint.x, startPoint.y), new Point(thirdPoint.x, thirdPoint.y), new Point(endPoint.x, endPoint.y));\n    var centerX = centerObject.x;\n    var centerY = centerObject.y;\n    var r = centerObject.r;\n\n    var angle = Math.atan2(centerX - startPoint.x, centerY - startPoint.y);\n    // console.log(centerObject);\n    if (!angle) {\n      ctx.beginPath();\n      ctx.moveTo(startPoint.x, startPoint.y);\n      ctx.lineTo(endPoint.x, endPoint.y);\n    } else {\n      if (angle > Math.PI / 2) {\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, r, Math.PI * 1.5 - angle, Math.PI * 1.5 + angle, true);\n      } else {\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, r, Math.PI * 1.5 - angle, Math.PI * 1.5 + angle, false);\n      }\n    }\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.stroke();\n  };\n  return GuitarString;\n});\n\n},{\"./point\":7}],3:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/* Universal Module Definition */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('underline', [], function () {\n      return root.underline = factory();\n    });\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.Underline = factory();\n  }\n})(undefined, function () {\n  var baselineRatio = require('./baseline-ratio');\n  var MultipleUnderline = require('./multiple-underline');\n  var SingleUnderline = require('./single-underline');\n\n  function getElementStyles(element) {\n    // lineHeight, height, ratio, fontFamily, fontSize, fontStyle\n    var $this = element;\n\n    var baselinePositionRatio = baselineRatio(element);\n    var lineHeight = parseFloat(window.getComputedStyle($this, null).getPropertyValue(\"line-height\"));\n    var fontFamily = window.getComputedStyle($this, null).getPropertyValue(\"font-family\");\n    var fontSize = window.getComputedStyle($this, null).getPropertyValue(\"font-size\");\n    var fontStyle = window.getComputedStyle($this, null).getPropertyValue(\"font-style\");\n    var width = $this.getBoundingClientRect().width;\n    var height = $this.getBoundingClientRect().height;\n    var parentWidth = $this.parentNode.getBoundingClientRect().width;\n\n    var offsetLeft = $this.offsetLeft;\n    var parentOffsetLeft = $this.parentNode.offsetLeft;\n    var canvasLeft = parentOffsetLeft - offsetLeft;\n    var textIndent = offsetLeft - parentOffsetLeft;\n\n    // canvas.style.left= canvasLeft + 'px';\n    return {\n      lineHeight: lineHeight,\n      width: width,\n      height: height,\n      parentWidth: parentWidth,\n      fontFamily: fontFamily,\n      fontSize: fontSize,\n      fontStyle: fontStyle,\n      baselinePositionRatio: baselinePositionRatio,\n      canvasLeft: canvasLeft,\n      textIndent: textIndent\n    };\n  }\n\n  var requestAnimFrame = function (callback) {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      window.setTimeout(callback, 1000 / 60);\n    };\n  }();\n\n  function Underline(element, options) {\n    this.underlines = [];\n\n    if (!element) {\n      console.error('No element defined!');\n    }\n\n    var underlineStyles = {\n      'text-underline-color': options.color || '#000',\n      'text-underline-position': options.position || 'auto', // could be ratio or todo: px\n      'text-underline-skip': options.skip || true,\n      'text-underline-width': options.width || 'auto' // could be auto or px or ratio\n    };\n\n    // if element parameter is a string, query the dom for it,\n    // otherwise just use it\n    element = typeof element === 'string' ? document.querySelectorAll(element) : element;\n\n    [].forEach.call(element, function (el) {\n      var elementStyles = getElementStyles(el);\n      var underline;\n      // single line or multiple line?\n      if (elementStyles.height > elementStyles.lineHeight) {\n        underline = new MultipleUnderline(el, underlineStyles, elementStyles);\n      } else {\n        // single line\n        underline = new SingleUnderline(el, underlineStyles, elementStyles);\n      }\n      this.underlines.push(underline);\n    }.bind(this));\n  };\n\n  Underline.prototype.animate = function () {\n    this.underlines.forEach(function (underline) {\n      underline.clear();\n      underline.update();\n      underline.draw();\n    }.bind(this));\n    requestAnimFrame(this.animate);\n  };\n  return Underline;\n});\n\n},{\"./baseline-ratio\":1,\"./multiple-underline\":4,\"./single-underline\":8}],4:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/* Universal Module Definition */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('multipleUnderline', [], function () {\n      return root.multipleUnderline = factory();\n    });\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.MultipleUnderline = factory();\n  }\n})(undefined, function () {\n  var multiplyValue = require('./multiply-value');\n  var optimalStrokeWidthPos = require('./optimal-stroke-width-pos');\n  var GuitarString = require('./guitar-string');\n  var Point = require('./point');\n  var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n\n  function MultipleUnderline(element, underlineStyles, elementStyles) {\n    //ctor\n    this.element = element;\n\n    this.text = this.element.textContent;\n\n    this.underlineStyles = underlineStyles;\n\n    // this.elementStyles = getElementStyles(element);\n    this.elementStyles = elementStyles;\n\n    this.canvas = document.createElement(\"canvas\");\n    this.ctx = this.canvas.getContext('2d');\n\n    this.ratio = window.devicePixelRatio;\n    this.canvas.width = this.elementStyles.width * this.ratio;\n    this.canvas.height = this.elementStyles.height * this.ratio;\n    // this.canvas.height = this.canvas.clientHeight + this.elementStyles.lineHeight;\n    this.canvas.style.left = this.elementStyles.canvasLeft + 'px';\n    this.element.appendChild(this.canvas);\n    this.canvas.style.width = this.elementStyles.width + 'px';\n\n    this.ctx.font = this.font = this.elementStyles.fontStyle + ' ' + multiplyValue(this.elementStyles.fontSize, this.ratio) + ' ' + this.elementStyles.fontFamily;\n\n    this.multipleRedrawActive = false;\n    if (is_chrome) {\n      // chrome floor the lineheight when it is not a whole number\n      // this.elementStyles.lineHeight = Math.floor(this.elementStyles.lineHeight * this.ratio);\n      this.elementStyles.lineHeight = this.elementStyles.lineHeight * this.ratio;\n    } else {\n      this.elementStyles.lineHeight = this.elementStyles.lineHeight * this.ratio;\n    }\n\n    // determine the text-underline-width / strokeWidth\n    var dotWidth = this.ctx.measureText('.')['width'];\n    if (this.underlineStyles['text-underline-width'] == \"auto\") {\n      // if set to auto, calculate the optimized width based on font\n      this.strokeWidth = dotWidth / 12;\n    } else {\n      //if set to px value, todo: other unit such as em?\n      this.strokeWidth = this.underlineStyles['text-underline-width'];\n      //get number value\n      this.strokeWidth = parseFloat(this.strokeWidth) * this.ratio;\n    }\n\n    // determine the text-underline-position / underlinePosition\n    // text-underline-position in ratio, todo: default and user set position ratio\n    if (this.underlineStyles['text-underline-position'] == \"auto\") {\n      // if set to auto, calculate the optimized width based on font\n      this.underlinePosition = parseFloat(this.elementStyles.fontSize) * this.ratio * (1 - this.elementStyles.baselinePositionRatio + this.elementStyles.baselinePositionRatio * 0.4) + this.strokeWidth / 2;\n    } else {\n      //if set to ratio value, todo: other unit such as em, px?\n      var userUnderlinePosition = parseFloat(this.underlineStyles['text-underline-position']);\n      // console.log(userUnderlinePosition);\n      this.underlinePosition = parseFloat(this.elementStyles.fontSize) * this.ratio * (1 - this.elementStyles.baselinePositionRatio + this.elementStyles.baselinePositionRatio * userUnderlinePosition) + this.strokeWidth / 2;\n    }\n\n    var adjustValue = optimalStrokeWidthPos(this.strokeWidth, this.underlinePosition);\n    this.strokeWidth = adjustValue.strokeWidth;\n    this.underlinePosition = adjustValue.posY;\n\n    this.lines = [];\n    this.myStrings = [];\n\n    var words = this.text.match(/[^\\s-]+-?\\s?/g);\n    var line = '';\n\n    var linePositionY = 0;\n    var firstLineCount = 0;\n    for (var n = 0; n < words.length; n++) {\n      // add the whitespace after getting the width measurement\n      if (words[n].match(/\\s+$/)) {\n        // the last character of words[n] is whitespace\n        var newWord = words[n].replace(/\\s+$/, '');\n        var testLine = line + newWord;\n        var testLineMetrics = this.ctx.measureText(testLine);\n        var testLineWidth = testLineMetrics.width;\n        testLine = testLine + ' ';\n      } else {\n        var testLine = line + words[n];\n        var testLineMetrics = this.ctx.measureText(testLine);\n        var testLineWidth = testLineMetrics.width;\n      }\n\n      if (!firstLineCount) {\n        //the first line, should consider startingPointX\n        if (testLineWidth + this.elementStyles.textIndent * this.ratio > this.elementStyles.parentWidth * this.ratio && n > 0) {\n          //  draw the underline\n          if (line.match(/\\s+$/)) {\n            // the last character of line is whitespace\n            var lineMetrics = this.ctx.measureText(line.replace(/\\s+$/, ''));\n            var lineWidth = lineMetrics.width;\n          } else {\n            var lineMetrics = this.ctx.measureText(line);\n            var lineWidth = lineMetrics.width;\n          }\n\n          var tempLine = {\n            lineText: line,\n            lineTextIndent: this.elementStyles.textIndent * this.ratio - 0.2,\n            linePositionY: linePositionY,\n            lineMeasureWidth: lineWidth\n          };\n          this.lines.push(tempLine);\n\n          line = words[n];\n          linePositionY += this.elementStyles.lineHeight;\n          firstLineCount++;\n        } else {\n          line = testLine;\n        }\n      } else {\n        if (testLineWidth > this.elementStyles.parentWidth * this.ratio && n > 0) {\n          //  draw the underline\n          if (line.match(/\\s+$/)) {\n            // the last character of line is whitespace\n            var lineMetrics = this.ctx.measureText(line.replace(/\\s+$/, ''));\n            var lineWidth = lineMetrics.width;\n          } else {\n            var lineMetrics = this.ctx.measureText(line);\n            var lineWidth = lineMetrics.width;\n          }\n\n          var tempLine = {\n            lineText: line,\n            lineTextIndent: -0.2,\n            linePositionY: linePositionY,\n            lineMeasureWidth: lineWidth\n          };\n          this.lines.push(tempLine);\n\n          line = words[n];\n          linePositionY += this.elementStyles.lineHeight;\n        } else {\n          line = testLine;\n        }\n      }\n    }\n    // draw the last line\n    //  draw the underline\n    if (line.match(/\\s+$/)) {\n      // the last character of line is whitespace\n      var lineMetrics = this.ctx.measureText(line.replace(/\\s+$/, ''));\n      var lineWidth = lineMetrics.width;\n    } else {\n      var lineMetrics = this.ctx.measureText(line);\n      var lineWidth = lineMetrics.width;\n    }\n\n    var tempLine = {\n      lineText: line,\n      lineTextIndent: -0.2,\n      linePositionY: linePositionY,\n      lineMeasureWidth: lineWidth\n    };\n    this.lines.push(tempLine);\n    for (var i = 0; i < this.lines.length; i++) {\n      var tempLine = this.lines[i];\n      var myString = new GuitarString(this.ctx, new Point(tempLine.lineTextIndent, tempLine.linePositionY + this.underlinePosition), new Point(tempLine.lineTextIndent + tempLine.lineMeasureWidth, tempLine.linePositionY + this.underlinePosition), this.strokeWidth, this.underlineStyles['text-underline-color'], this.ratio);\n      this.myStrings.push(myString);\n    }\n\n    this.drawUnderline();\n    this.drawHoles();\n  }\n\n  MultipleUnderline.prototype.drawUnderline = function () {\n    // draw the underline\n    for (var i = 0; i < this.myStrings.length; i++) {\n      var tempString = this.myStrings[i];\n      // tempString.clear();\n      tempString.update();\n      tempString.draw();\n    }\n  };\n\n  MultipleUnderline.prototype.drawHoles = function () {\n    // draw the font stroke\n    for (var i = 0; i < this.lines.length; i++) {\n      var tempLine = this.lines[i];\n\n      this.ctx.globalCompositeOperation = \"destination-out\";\n      this.ctx.font = this.font;\n\n      this.ctx.fillStyle = 'green';\n      this.ctx.textBaseline = 'top';\n      this.ctx.fillText(tempLine.lineText, tempLine.lineTextIndent, tempLine.linePositionY);\n\n      this.ctx.lineWidth = 2 * this.ratio + this.strokeWidth * 3.6;\n      this.ctx.strokeStyle = 'blue';\n      this.ctx.strokeText(tempLine.lineText, tempLine.lineTextIndent, tempLine.linePositionY);\n    }\n  };\n\n  MultipleUnderline.prototype.clear = function () {\n    // clear\n    var lastMultipleRedrawActive = this.multipleRedrawActive;\n    this.multipleRedrawActive = false;\n    for (var i = 0; i < this.myStrings.length; i++) {\n      var tempString = this.myStrings[i];\n      // this.myString.clear();\n      // console.log(tempString.redrawActive);\n      if (tempString.redrawActive) {\n        this.multipleRedrawActive = true;\n      }\n    }\n    // console.log(this.multipleRedrawActive);\n    if (this.multipleRedrawActive) {\n      console.log('clear now!');\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // if (!lastMultipleRedrawActive && this.multipleRedrawActive) {\n    //     for(var i = 0; i < this.myStrings.length; i++) {\n    //         var tempString = this.myStrings[i];\n    //         tempString.drawLine();\n    //     }\n    // }\n  };\n\n  MultipleUnderline.prototype.update = function () {\n    //update\n  };\n\n  MultipleUnderline.prototype.draw = function () {\n    // draw\n    if (this.multipleRedrawActive) {\n      this.drawUnderline();\n      this.drawHoles();\n    }\n  };\n\n  return MultipleUnderline;\n});\n\n},{\"./guitar-string\":2,\"./multiply-value\":5,\"./optimal-stroke-width-pos\":6,\"./point\":7}],5:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/* Universal Module Definition */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('multiplyValue', [], function () {\n      return root.multiplyValue = factory();\n    });\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.MultiplyValue = factory();\n  }\n})(undefined, function () {\n\n  var multiplyValue = function multiplyValue(value, multiplier) {\n    var str = value;\n    var m = multiplier;\n    var result = str.match(/(\\d*\\.?\\d*)(.*)/);\n    //http://stackoverflow.com/questions/2868947/split1px-into-1px-1-px-in-javascript\n    return result[1] * m + result[2];\n  };\n\n  return multiplyValue;\n});\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/* Universal Module Definition */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('optimalStrokeWidthPos', [], function () {\n      return root.optimalStrokeWidthPos = factory();\n    });\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.OptimalStrokeWidthPos = factory();\n  }\n})(undefined, function () {\n  var optimalStrokeWidthPos = function optimalStrokeWidthPos(strokeWidth, posY) {\n    if (strokeWidth < 1) {\n      posY = Math.round(posY - 0.5) + 0.5;\n    } else if (strokeWidth >= 1) {\n      strokeWidth = Math.round(strokeWidth);\n      if (strokeWidth % 2) {\n        // odd, posY -> 0.5\n        posY = Math.round(posY - 0.5) + 0.5;\n      } else {\n        // even, posY -> 1\n        posY = Math.round(posY);\n      }\n    }\n    return {\n      strokeWidth: strokeWidth,\n      posY: posY\n    };\n  };\n  return optimalStrokeWidthPos;\n});\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/* Universal Module Definition */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('point', [], function () {\n      return root.point = factory();\n    });\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.Point = factory();\n  }\n})(undefined, function () {\n  var Point = function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  };\n\n  return Point;\n});\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/* Universal Module Definition */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('singleUnderline', [], function () {\n      return root.singleUnderline = factory();\n    });\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.SingleUnderline = factory();\n  }\n})(undefined, function () {\n  var multiplyValue = require('./multiply-value');\n  var optimalStrokeWidthPos = require('./optimal-stroke-width-pos');\n  var GuitarString = require('./guitar-string');\n  var Point = require('./point');\n\n  function SingleUnderline(element, underlineStyles, elementStyles) {\n    //ctor\n    this.element = element;\n\n    this.text = this.element.textContent;\n\n    this.underlineStyles = underlineStyles;\n\n    this.elementStyles = elementStyles;\n    this.redrawActive = false;\n\n    this.canvas = document.createElement(\"canvas\");\n    this.ctx = this.canvas.getContext('2d');\n\n    this.ratio = window.devicePixelRatio;\n    this.canvas.width = this.elementStyles.width * this.ratio;\n    this.canvas.height = this.elementStyles.height * this.ratio;\n    this.element.appendChild(this.canvas);\n    this.canvas.style.width = this.elementStyles.width + 'px';\n\n    this.ctx.font = this.font = this.elementStyles.fontStyle + ' ' + multiplyValue(this.elementStyles.fontSize, this.ratio) + ' ' + this.elementStyles.fontFamily;\n\n    // determine the text-underline-width / strokeWidth\n    var dotWidth = this.ctx.measureText('.')['width'];\n    if (this.underlineStyles['text-underline-width'] == \"auto\") {\n      // if set to auto, calculate the optimized width based on font\n      this.strokeWidth = dotWidth / 12;\n    } else {\n      //if set to px value, todo: other unit such as em?\n      this.strokeWidth = this.underlineStyles['text-underline-width'];\n      //get number value\n      this.strokeWidth = parseFloat(this.strokeWidth) * this.ratio;\n    }\n\n    // determine the text-underline-position / underlinePosition\n    // text-underline-position in ratio, todo: default and user set position ratio\n    if (this.underlineStyles['text-underline-position'] == \"auto\") {\n      // if set to auto, calculate the optimized width based on font\n      // console.log(this.elementStyles.baselinePositionRatio);\n      this.underlinePosition = parseFloat(this.elementStyles.height) * this.ratio * (1 - this.elementStyles.baselinePositionRatio + this.elementStyles.baselinePositionRatio * 0.4) + this.strokeWidth / 2;\n    } else {\n      //if set to ratio value, todo: other unit such as em, px?\n      var userUnderlinePosition = parseFloat(this.underlineStyles['text-underline-position']);\n      // console.log(this.elementStyles.baselinePositionRatio);\n      this.underlinePosition = parseFloat(this.elementStyles.height) * this.ratio * (1 - this.elementStyles.baselinePositionRatio + this.elementStyles.baselinePositionRatio * userUnderlinePosition) + this.strokeWidth / 2;\n    }\n\n    var adjustValue = optimalStrokeWidthPos(this.strokeWidth, this.underlinePosition);\n    this.strokeWidth = adjustValue.strokeWidth;\n    this.underlinePosition = adjustValue.posY;\n\n    // todo: if last character is a space, remove the space\n    var textWidth = this.ctx.measureText(this.text).width;\n\n    this.myString = new GuitarString(this.ctx, new Point(0, this.underlinePosition), new Point(textWidth, this.underlinePosition), this.strokeWidth, this.underlineStyles['text-underline-color'], this.ratio);\n    this.drawHoles();\n  }\n\n  SingleUnderline.prototype.drawUnderline = function () {\n    //  draw the underline\n    this.myString.draw();\n  };\n\n  SingleUnderline.prototype.drawHoles = function () {\n    // draw the font stroke\n    this.ctx.font = this.font;\n    this.ctx.textBaseline = 'top';\n\n    this.ctx.globalCompositeOperation = \"destination-out\";\n\n    this.ctx.lineWidth = 2 * this.ratio + this.strokeWidth * 3.6;\n    this.ctx.strokeStyle = 'blue';\n    this.ctx.beginPath();\n    this.ctx.strokeText(this.text, -0.2, 0);\n\n    this.ctx.fillStyle = 'green';\n    this.ctx.beginPath();\n    this.ctx.fillText(this.text, -0.2, 0);\n  };\n\n  SingleUnderline.prototype.clear = function () {\n    this.redrawActive = this.myString.redrawActive;\n    // clear\n    if (this.myString.redrawActive) {\n      // this.myString.clear();\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n  };\n\n  SingleUnderline.prototype.update = function () {\n    // update\n    if (this.myString.redrawActive) {\n      this.myString.update();\n    }\n  };\n\n  SingleUnderline.prototype.draw = function () {\n    // draw\n    if (this.redrawActive) {\n      this.drawUnderline();\n      this.drawHoles();\n    }\n  };\n\n  return SingleUnderline;\n});\n\n},{\"./guitar-string\":2,\"./multiply-value\":5,\"./optimal-stroke-width-pos\":6,\"./point\":7}]},{},[3])(3)\n});\n\n","/* Universal Module Definition */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('baselineRatio', [], function () {\n      return (root.baselineRatio = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.baselineRatio = factory();\n  }\n}(this, function () {\n  var baselineRatio = function(elem) {\n    // Get the baseline in the context of whatever element is passed in.\n    elem = elem || document.body;\n\n    // The container is a little defenseive.\n    var container = document.createElement('div');\n    container.style.display = \"block\";\n    container.style.position = \"absolute\";\n    container.style.bottom = \"0\";\n    container.style.right = \"0\";\n    container.style.width = \"0px\";\n    container.style.height = \"0px\";\n    container.style.margin = \"0\";\n    container.style.padding = \"0\";\n    container.style.visibility = \"hidden\";\n    container.style.overflow = \"hidden\";\n\n    // Intentionally unprotected style definition.\n    var small = document.createElement('span');\n    var large = document.createElement('span');\n\n    // Large numbers help improve accuracy.\n    small.style.fontSize = \"0px\";\n    large.style.fontSize = \"2000px\";\n\n    small.innerHTML = \"X\";\n    large.innerHTML = \"X\";\n\n    container.appendChild(small);\n    container.appendChild(large);\n\n    console.log(elem);\n\n    // Put the element in the DOM for a split second.\n    elem.appendChild(container);\n    var smalldims = small.getBoundingClientRect();\n    var largedims = large.getBoundingClientRect();\n    elem.removeChild(container);\n\n    // Calculate where the baseline was, percentage-wise.\n    var baselineposition = smalldims.top - largedims.top;\n    var height = largedims.height;\n\n    return 1 - (baselineposition / height);\n  }\n\n  return baselineRatio;\n}));\n","/* Universal Module Definition */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('guitarString', [], function() {\n      return (root.guitarString = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.GuitarString = factory();\n  }\n}(this, function() {\n  var Point = require('./point');\n  var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n\n  //audio play multiple channels at the same time: http://www.storiesinflight.com/html5/audio.html\n  var channel_max = 10; // number of channels\n  var audiochannels = new Array();\n  for (var a = 0; a < channel_max; a++) { // prepare the channels\n    audiochannels[a] = new Array();\n    audiochannels[a]['channel'] = new Audio(); // create a new audio object\n    audiochannels[a]['finished'] = -1; // expected end time for this channel\n  }\n\n  function play_multi_sound(s) {\n    for (var a = 0; a < audiochannels.length; a++) {\n      var thistime = new Date();\n      if (audiochannels[a]['finished'] < thistime.getTime()) { // is this channel finished?\n        audiochannels[a]['finished'] = thistime.getTime() + document.getElementById(s).duration * 1000;\n        audiochannels[a]['channel'].src = document.getElementById(s).src;\n        audiochannels[a]['channel'].load();\n        audiochannels[a]['channel'].play();\n        break;\n      }\n    }\n  }\n\n\n\n  var circleCenter = function(startPoint, thirdPoint, endPoint) {\n    var dy1 = thirdPoint.y - startPoint.y;\n    var dx1 = thirdPoint.x - startPoint.x;\n    var dy2 = endPoint.y - thirdPoint.y;\n    var dx2 = endPoint.x - thirdPoint.x;\n\n    var aSlope = dy1 / dx1;\n    var bSlope = dy2 / dx2;\n\n\n    var centerX = (aSlope * bSlope * (startPoint.y - endPoint.y) + bSlope * (startPoint.x + thirdPoint.x) - aSlope * (thirdPoint.x + endPoint.x)) / (2 * (bSlope - aSlope));\n    var centerY = -1 * (centerX - (startPoint.x + thirdPoint.x) / 2) / aSlope + (startPoint.y + thirdPoint.y) / 2;\n    var r = dist(centerX, centerY, startPoint.x, startPoint.y)\n\n    return {\n      x: centerX,\n      y: centerY,\n      r: r\n    };\n  }\n\n  var dist = function(x, y, x0, y0) {\n    return Math.sqrt((x -= x0) * x + (y -= y0) * y);\n  };\n\n\n  var intersects = function(a, b, c, d, p, q, r, s) {\n    // returns true if the line from (a,b)->(c,d) intersects with (p,q)->(r,s)\n    var det, gamma, lambda;\n    det = (c - a) * (s - q) - (r - p) * (d - b);\n    if (det === 0) {\n      return false;\n    } else {\n      lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n      gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n      return (0 < lambda && lambda < 1) && (0 < gamma && gamma < 1);\n    }\n  };\n\n  var musicLevel = function(startPoint, endPoint, ratio) {\n    var length = dist(startPoint.x, startPoint.y, endPoint.x, endPoint.y) / ratio;\n\n    var level = Math.floor(length / 30);\n    if (level > 19) {\n      level = 19;\n    }\n    level = 19 - level\n    if (level < 10) {\n      level = '0' + level\n    }\n    return level;\n  };\n\n  function GuitarString(ctx, startPoint, endPoint, strokeWidth, strokeColor, ratio) {\n    //ctor\n    this.ctx = ctx;\n    this.canvas = ctx.canvas;\n    this.startPoint = startPoint;\n    this.endPoint = endPoint;\n    this.strokeWidth = strokeWidth;\n    this.strokeColor = strokeColor;\n    this.ratio = ratio;\n\n    this.level = musicLevel(this.startPoint, this.endPoint, this.ratio);\n\n    // this.canvas.width = this.canvas.clientWidth;\n    // this.canvas.height = this.canvas.clientHeight*1.2;\n\n    this.maxGrabDistance = this.strokeWidth * 2;\n    this.maxControlDistance = this.strokeWidth * 6;\n\n    this.ctx.lineWidth = this.strokeWidth;\n    this.ctx.strokeStyle = this.strokeColor;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.startPoint.x, this.startPoint.y);\n    this.ctx.lineTo(this.endPoint.x, this.endPoint.y);\n    this.ctx.globalCompositeOperation = \"source-over\";\n    this.ctx.stroke();\n\n    this.currentMouseX;\n    this.currentMouseY;\n    this.lastMouseX;\n    this.lastMouseY;\n    this.waveInitX = (this.startPoint.x + this.endPoint.x) / 2;\n    this.waveInitY = this.startPoint.y - this.maxControlDistance;\n    this.waveCount = 0;\n    this.damping = 0.9;\n\n    this.thirdPoint = new Point((this.startPoint.x + this.endPoint.x) / 2, this.startPoint.y);\n\n\n    // state flags\n    this.userInControl = false;\n    this.userPlucked = false;\n    this.waveInControl = false;\n    this.waveFinished = false;\n    this.initState = true;\n    this.lastRedraw = false;\n    this.redrawActive = false;\n\n    //add event listener\n    var self = this;\n    this.canvas.addEventListener('mouseover', function(event) {\n      self.mouseOver(self, event);\n    }, false);\n\n    this.canvas.addEventListener('mousemove', function(event) {\n      self.mouseMove(self, event);\n    }, false);\n\n    this.canvas.addEventListener(\"mouseleave\", function(event) {\n      self.mouseLeave(self, event);\n    }, false);\n\n    this.canvas.addEventListener(\"mouseout\", function(event) {\n      self.mouseOut(self, event);\n    }, false);\n\n    this.canvas.addEventListener(\"touchstart\", function(event) {\n      self.touchDown(self, event);\n    }, false);\n    this.canvas.addEventListener(\"touchmove\", function(event) {\n      self.touchXY(self, event);\n    }, false);\n    this.canvas.addEventListener(\"touchend\", function(event) {\n      self.touchUp(self, event);\n    }, false);\n\n  }\n\n  GuitarString.prototype.mouseOver = function(self, event) {\n    // console.log('mouseOver');\n    this.currentMouseX = event.layerX * this.ratio;\n    this.currentMouseX = event.layerY * this.ratio;\n  };\n  GuitarString.prototype.mouseMove = function(self, event) {\n    // console.log('mouseMove');\n    this.lastMouseX = this.currentMouseX;\n    this.lastMouseY = this.currentMouseY;\n    this.currentMouseX = event.layerX * this.ratio;\n    this.currentMouseY = event.layerY * this.ratio;\n\n    var radius = circleCenter(new Point(this.startPoint.x, this.startPoint.y),\n      new Point(this.currentMouseX, this.currentMouseY),\n      new Point(this.endPoint.x, this.endPoint.y)).r;\n    var currentWaveDistance = radius - Math.sqrt(Math.pow(radius, 2) - Math.pow((Math.abs(this.endPoint.x - this.startPoint.x)) / 2, 2));\n    var lastRadius = circleCenter(new Point(this.startPoint.x, this.startPoint.y),\n      new Point(this.lastMouseX, this.lastMouseY),\n      new Point(this.endPoint.x, this.endPoint.y)).r;\n    var lastWaveDistance = lastRadius - Math.sqrt(Math.pow(lastRadius, 2) - Math.pow((Math.abs(this.endPoint.x - this.startPoint.x)) / 2, 2));\n\n\n\n    var mouseInGrabRange = currentWaveDistance < this.maxGrabDistance && this.currentMouseX > this.startPoint.x && this.currentMouseX < this.endPoint.x;\n\n    var lastMouseOutGrabRange = !(lastWaveDistance < this.maxGrabDistance && this.lastMouseX > this.startPoint.x && this.lastMouseX < this.endPoint.x);\n\n    var mouseOutControlRange = !(currentWaveDistance < this.maxControlDistance && this.currentMouseX > this.startPoint.x && this.currentMouseX < this.endPoint.x);\n\n    var lastMouseInControlRange = lastWaveDistance < this.maxControlDistance && this.lastMouseX > this.startPoint.x && this.lastMouseY < this.endPoint.x;\n\n    var mouseCrossed = intersects(this.lastMouseX, this.lastMouseY,\n      this.currentMouseX, this.currentMouseY,\n      this.startPoint.x, this.startPoint.y,\n      this.endPoint.x, this.endPoint.y);\n\n    if (mouseInGrabRange && lastMouseOutGrabRange && (!this.userInControl)) {\n      // console.log('grab!');\n      this.initState = false;\n      this.userInControl = true;\n      this.waveInControl = false;\n      this.waveFinished = false;\n\n      this.redrawActive = true;\n    } else if (mouseOutControlRange && lastMouseInControlRange && this.userInControl) {\n      // console.log('boing!');\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.waveCount = 0;\n      // this.waveInitX = this.lastMouseX;\n      // this.waveInitY = this.lastMouseY;\n      this.waveInitX = (this.startPoint.x + this.endPoint.x) / 2;\n      this.waveInitY = this.endPoint.y + this.maxControlDistance;\n      // play audio\n      play_multi_sound('audio' + this.level);\n      // createjs.Sound.play('cello_' + this.level);\n\n    }\n\n    if ((!this.userInControl) && mouseCrossed) {\n      // console.log('i just plucked!');\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.redrawActive = true;\n      this.waveCount = 0;\n      this.waveInitX = (this.startPoint.x + this.endPoint.y) / 2;\n      this.waveInitY = this.endPoint.y + this.maxGrabDistance * 2 / 3;\n    }\n  };\n  GuitarString.prototype.mouseLeave = function(self, event) {\n    // console.log('mouseLeave');\n    if (this.userInControl) {\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.redrawActive = true;\n      this.waveCount = 0;\n\n      this.waveInitX = event.layerX * this.ratio;\n      this.waveInitY = event.layerY * this.ratio;\n\n    }\n  };\n  GuitarString.prototype.mouseOut = function(self, event) {\n    // console.log('mouseOut');\n  };\n  GuitarString.prototype.touchDown = function(self, event) {\n    // console.log('touchDown');\n    this.currentMouseX = event.layerX * this.ratio;\n    this.currentMouseX = event.layerY * this.ratio;\n  };\n  GuitarString.prototype.touchXY = function(self, event) {\n    // console.log('touchMove');\n    this.lastMouseX = this.currentMouseX;\n    this.lastMouseY = this.currentMouseY;\n    this.currentMouseX = event.layerX * this.ratio;\n    this.currentMouseY = event.layerY * this.ratio;\n\n    var radius = circleCenter(new Point(this.startPoint.x, this.startPoint.y),\n      new Point(this.currentMouseX, this.currentMouseY),\n      new Point(this.endPoint.x, this.endPoint.y)).r;\n    var currentWaveDistance = radius - Math.sqrt(Math.pow(radius, 2) - Math.pow((Math.abs(this.endPoint.x - this.startPoint.x)) / 2, 2));\n    var lastRadius = circleCenter(new Point(this.startPoint.x, this.startPoint.y),\n      new Point(this.lastMouseX, this.lastMouseY),\n      new Point(this.endPoint.x, this.endPoint.y)).r;\n    var lastWaveDistance = lastRadius - Math.sqrt(Math.pow(lastRadius, 2) - Math.pow((Math.abs(this.endPoint.x - this.startPoint.x)) / 2, 2));\n\n\n\n    var mouseInGrabRange = currentWaveDistance < this.maxGrabDistance && this.currentMouseX > this.startPoint.x && this.currentMouseX < this.endPoint.x;\n\n    var lastMouseOutGrabRange = !(lastWaveDistance < this.maxGrabDistance && this.lastMouseX > this.startPoint.x && this.lastMouseX < this.endPoint.x);\n\n    var mouseOutControlRange = !(currentWaveDistance < this.maxControlDistance && this.currentMouseX > this.startPoint.x && this.currentMouseX < this.endPoint.x);\n\n    var lastMouseInControlRange = lastWaveDistance < this.maxControlDistance && this.lastMouseX > this.startPoint.x && this.lastMouseY < this.endPoint.x;\n\n    var mouseCrossed = intersects(this.lastMouseX, this.lastMouseY,\n      this.currentMouseX, this.currentMouseY,\n      this.startPoint.x, this.startPoint.y,\n      this.endPoint.x, this.endPoint.y);\n\n    if (mouseInGrabRange && lastMouseOutGrabRange && (!this.userInControl)) {\n      // console.log('grab!');\n      this.initState = false;\n      this.userInControl = true;\n      this.waveInControl = false;\n      this.waveFinished = false;\n\n      this.redrawActive = true;\n    } else if (mouseOutControlRange && lastMouseInControlRange && this.userInControl) {\n      // console.log('boing!');\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.waveCount = 0;\n      // this.waveInitX = this.lastMouseX;\n      // this.waveInitY = this.lastMouseY;\n      this.waveInitX = (this.startPoint.x + this.endPoint.x) / 2;\n      this.waveInitY = this.endPoint.y + this.maxControlDistance;\n      // play audio\n      play_multi_sound('audio' + this.level);\n\n    }\n\n    if ((!this.userInControl) && mouseCrossed) {\n      // console.log('i just plucked!');\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.redrawActive = true;\n      this.waveCount = 0;\n      this.waveInitX = (this.startPoint.x + this.endPoint.y) / 2;\n      this.waveInitY = this.endPoint.y + this.maxGrabDistance * 2 / 3;\n      // play audio\n      // play_multi_sound('audio' + this.level);\n\n    }\n  };\n  GuitarString.prototype.touchUp = function(self, event) {\n    // console.log('touchUp');\n    if (this.userInControl) {\n      this.initState = false;\n      this.userInControl = false;\n      this.waveInControl = true;\n      this.waveFinished = false;\n      this.redrawActive = true;\n      this.waveCount = 0;\n\n      this.waveInitX = event.layerX * this.ratio;\n      this.waveInitY = event.layerY * this.ratio;\n\n    }\n  };\n\n\n  GuitarString.prototype.clear = function() {\n    // clear\n    // if(this.redrawActive){\n    // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    // }\n  };\n\n  GuitarString.prototype.update = function() {\n    // console.log(this.redrawActive);\n    // if(this.redrawActive){\n    if (this.userInControl) {\n      this.thirdPoint = new Point(this.currentMouseX, this.currentMouseY);\n    }\n    if (this.waveInControl) {\n      var waveX = this.waveInitX;\n      var waveY = this.startPoint.y +\n        (this.waveInitY - this.startPoint.y) * Math.cos(this.waveCount / 5 * Math.PI) * Math.pow(this.damping, this.waveCount);\n\n      if (Math.pow(this.damping, this.waveCount) > 0.03) {\n        // still waving ....\n        this.thirdPoint = new Point(waveX, waveY);\n        this.waveCount++;\n      } else {\n        // wave damped to a straight line, wave is finished\n        this.waveInControl = false;\n        this.waveFinished = true;\n        this.lastRedraw = true;\n        this.thirdPoint = new Point(waveX, waveY);\n      }\n    }\n    // }\n  }\n\n  GuitarString.prototype.draw = function() {\n    // if(this.redrawActive){\n    // draw stuff\n    // }\n    if (this.lastRedraw) {\n      this.drawLine();\n      this.lastRedraw = false;\n      this.redrawActive = false;\n    } else {\n      this.drawArc(this.startPoint, this.thirdPoint, this.endPoint);\n    }\n  };\n  GuitarString.prototype.drawLine = function() {\n    // draw a line instead of a flat curve when it stops redraw, pixel-perfect\n    this.ctx.lineWidth = this.strokeWidth;\n    this.ctx.strokeStyle = this.strokeColor;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.startPoint.x, this.startPoint.y);\n    this.ctx.lineTo(this.endPoint.x, this.endPoint.y);\n    this.ctx.globalCompositeOperation = \"source-over\";\n    this.ctx.stroke();\n  };\n\n\n  GuitarString.prototype.drawArc = function(startPoint, thirdPoint, endPoint) {\n    var ctx = this.ctx;\n    ctx.lineWidth = this.strokeWidth;\n    ctx.strokeStyle = this.strokeColor;\n\n    var centerObject = circleCenter(new Point(startPoint.x, startPoint.y),\n      new Point(thirdPoint.x, thirdPoint.y),\n      new Point(endPoint.x, endPoint.y));\n    var centerX = centerObject.x;\n    var centerY = centerObject.y;\n    var r = centerObject.r\n\n    var angle = Math.atan2(centerX - startPoint.x, centerY - startPoint.y);\n    // console.log(centerObject);\n    if (!angle) {\n      ctx.beginPath();\n      ctx.moveTo(startPoint.x, startPoint.y);\n      ctx.lineTo(endPoint.x, endPoint.y);\n    } else {\n      if (angle > Math.PI / 2) {\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, r, Math.PI * 1.5 - angle, Math.PI * 1.5 + angle, true);\n      } else {\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, r, Math.PI * 1.5 - angle, Math.PI * 1.5 + angle, false);\n      }\n    }\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.stroke();\n\n  }\n  return GuitarString;\n}));\n","/* Universal Module Definition */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('underline', [], function() {\n      return (root.underline = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.Underline = factory();\n  }\n}(this, function() {\n  var baselineRatio = require('./baseline-ratio');\n  var MultipleUnderline = require('./multiple-underline');\n  var SingleUnderline = require('./single-underline');\n\n\n  function getElementStyles(element) {\n    // lineHeight, height, ratio, fontFamily, fontSize, fontStyle\n    var $this = element;\n\n    var baselinePositionRatio = baselineRatio(element);\n    var lineHeight = parseFloat(window.getComputedStyle($this, null)\n      .getPropertyValue(\"line-height\"));\n    var fontFamily = window.getComputedStyle($this, null)\n      .getPropertyValue(\"font-family\");\n    var fontSize = window.getComputedStyle($this, null)\n      .getPropertyValue(\"font-size\");\n    var fontStyle = window.getComputedStyle($this, null)\n      .getPropertyValue(\"font-style\");\n    var width = $this.getBoundingClientRect().width;\n    var height = $this.getBoundingClientRect().height;\n    var parentWidth = $this.parentNode.getBoundingClientRect().width;\n\n\n    var offsetLeft = $this.offsetLeft;\n    var parentOffsetLeft = $this.parentNode.offsetLeft;\n    var canvasLeft = parentOffsetLeft - offsetLeft;\n    var textIndent = offsetLeft - parentOffsetLeft;\n\n    // canvas.style.left= canvasLeft + 'px';\n    return {\n      lineHeight: lineHeight,\n      width: width,\n      height: height,\n      parentWidth: parentWidth,\n      fontFamily: fontFamily,\n      fontSize: fontSize,\n      fontStyle: fontStyle,\n      baselinePositionRatio: baselinePositionRatio,\n      canvasLeft: canvasLeft,\n      textIndent: textIndent\n    }\n  }\n\n  var requestAnimFrame = (function(callback) {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n      function(callback) {\n        window.setTimeout(callback, 1000 / 60);\n      };\n  })();\n\n  function Underline(element, options) {\n    this.underlines = [];\n\n    if (!element) {\n      console.error('No element defined!');\n    }\n\n    var underlineStyles = {\n      'text-underline-color': options.color || '#000',\n      'text-underline-position': options.position || 'auto', // could be ratio or todo: px\n      'text-underline-skip': options.skip || true,\n      'text-underline-width': options.width || 'auto' // could be auto or px or ratio\n    }\n\n    // if element parameter is a string, query the dom for it,\n    // otherwise just use it\n    element = typeof element === 'string' ? document.querySelectorAll(element) : element;\n\n    [].forEach.call(element, function(el) {\n      var elementStyles = getElementStyles(el);\n      var underline;\n      // single line or multiple line?\n      if (elementStyles.height > elementStyles.lineHeight) {\n        underline = new MultipleUnderline(el, underlineStyles, elementStyles);\n      } else {\n        // single line\n        underline = new SingleUnderline(el, underlineStyles, elementStyles);\n      }\n      this.underlines.push(underline);\n    }.bind(this));\n  };\n\n  Underline.prototype.animate = function() {\n    this.underlines.forEach(function(underline) {\n      underline.clear();\n      underline.update();\n      underline.draw();\n    }.bind(this))\n    requestAnimFrame(this.animate);\n  };\n  return Underline;\n}));\n","/* Universal Module Definition */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('multipleUnderline', [], function() {\n      return (root.multipleUnderline = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.MultipleUnderline = factory();\n  }\n}(this, function() {\n  var multiplyValue = require('./multiply-value');\n  var optimalStrokeWidthPos = require('./optimal-stroke-width-pos');\n  var GuitarString = require('./guitar-string');\n  var Point = require('./point');\n  var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n\n  function MultipleUnderline(element, underlineStyles, elementStyles) {\n    //ctor\n    this.element = element;\n\n    this.text = this.element.textContent;\n\n    this.underlineStyles = underlineStyles;\n\n    // this.elementStyles = getElementStyles(element);\n    this.elementStyles = elementStyles;\n\n    this.canvas = document.createElement(\"canvas\");\n    this.ctx = this.canvas.getContext('2d');\n\n\n    this.ratio = window.devicePixelRatio;\n    this.canvas.width = this.elementStyles.width * this.ratio;\n    this.canvas.height = this.elementStyles.height * this.ratio;\n    // this.canvas.height = this.canvas.clientHeight + this.elementStyles.lineHeight;\n    this.canvas.style.left = this.elementStyles.canvasLeft + 'px';\n    this.element.appendChild(this.canvas);\n    this.canvas.style.width = this.elementStyles.width + 'px';\n\n    this.ctx.font = this.font = this.elementStyles.fontStyle + ' ' + multiplyValue(this.elementStyles.fontSize, this.ratio) + ' ' + this.elementStyles.fontFamily;\n\n    this.multipleRedrawActive = false;\n    if (is_chrome) {\n      // chrome floor the lineheight when it is not a whole number\n      // this.elementStyles.lineHeight = Math.floor(this.elementStyles.lineHeight * this.ratio);\n      this.elementStyles.lineHeight = this.elementStyles.lineHeight * this.ratio;\n    } else {\n      this.elementStyles.lineHeight = this.elementStyles.lineHeight * this.ratio;\n    }\n\n    // determine the text-underline-width / strokeWidth\n    var dotWidth = this.ctx.measureText('.')['width'];\n    if (this.underlineStyles['text-underline-width'] == \"auto\") {\n      // if set to auto, calculate the optimized width based on font\n      this.strokeWidth = dotWidth / 12;\n    } else {\n      //if set to px value, todo: other unit such as em?\n      this.strokeWidth = this.underlineStyles['text-underline-width'];\n      //get number value\n      this.strokeWidth = parseFloat(this.strokeWidth) * this.ratio;\n    }\n\n    // determine the text-underline-position / underlinePosition\n    // text-underline-position in ratio, todo: default and user set position ratio\n    if (this.underlineStyles['text-underline-position'] == \"auto\") {\n      // if set to auto, calculate the optimized width based on font\n      this.underlinePosition = parseFloat(this.elementStyles.fontSize) * this.ratio * (1 - this.elementStyles.baselinePositionRatio +\n        this.elementStyles.baselinePositionRatio * 0.4) + this.strokeWidth / 2;\n    } else {\n      //if set to ratio value, todo: other unit such as em, px?\n      var userUnderlinePosition = parseFloat(this.underlineStyles['text-underline-position']);\n      // console.log(userUnderlinePosition);\n      this.underlinePosition = parseFloat(this.elementStyles.fontSize) * this.ratio *\n        (1 - this.elementStyles.baselinePositionRatio +\n          this.elementStyles.baselinePositionRatio * userUnderlinePosition) + this.strokeWidth / 2;\n    }\n\n\n    var adjustValue = optimalStrokeWidthPos(this.strokeWidth, this.underlinePosition);\n    this.strokeWidth = adjustValue.strokeWidth;\n    this.underlinePosition = adjustValue.posY;\n\n    this.lines = [];\n    this.myStrings = [];\n\n    var words = this.text.match(/[^\\s-]+-?\\s?/g);\n    var line = '';\n\n    var linePositionY = 0;\n    var firstLineCount = 0;\n    for (var n = 0; n < words.length; n++) {\n      // add the whitespace after getting the width measurement\n      if (words[n].match(/\\s+$/)) {\n        // the last character of words[n] is whitespace\n        var newWord = words[n].replace(/\\s+$/, '');\n        var testLine = line + newWord;\n        var testLineMetrics = this.ctx.measureText(testLine);\n        var testLineWidth = testLineMetrics.width;\n        testLine = testLine + ' ';\n      } else {\n        var testLine = line + words[n];\n        var testLineMetrics = this.ctx.measureText(testLine);\n        var testLineWidth = testLineMetrics.width;\n      }\n\n      if (!firstLineCount) {\n        //the first line, should consider startingPointX\n        if (testLineWidth + this.elementStyles.textIndent * this.ratio > this.elementStyles.parentWidth * this.ratio && n > 0) {\n          //  draw the underline\n          if (line.match(/\\s+$/)) {\n            // the last character of line is whitespace\n            var lineMetrics = this.ctx.measureText(line.replace(/\\s+$/, ''));\n            var lineWidth = lineMetrics.width;\n          } else {\n            var lineMetrics = this.ctx.measureText(line);\n            var lineWidth = lineMetrics.width;\n          }\n\n          var tempLine = {\n            lineText: line,\n            lineTextIndent: this.elementStyles.textIndent * this.ratio - 0.2,\n            linePositionY: linePositionY,\n            lineMeasureWidth: lineWidth\n          }\n          this.lines.push(tempLine)\n\n          line = words[n];\n          linePositionY += this.elementStyles.lineHeight;\n          firstLineCount++;\n        } else {\n          line = testLine;\n        }\n      } else {\n        if (testLineWidth > this.elementStyles.parentWidth * this.ratio && n > 0) {\n          //  draw the underline\n          if (line.match(/\\s+$/)) {\n            // the last character of line is whitespace\n            var lineMetrics = this.ctx.measureText(line.replace(/\\s+$/, ''));\n            var lineWidth = lineMetrics.width;\n          } else {\n            var lineMetrics = this.ctx.measureText(line);\n            var lineWidth = lineMetrics.width;\n          }\n\n          var tempLine = {\n            lineText: line,\n            lineTextIndent: -0.2,\n            linePositionY: linePositionY,\n            lineMeasureWidth: lineWidth\n          }\n          this.lines.push(tempLine);\n\n          line = words[n];\n          linePositionY += this.elementStyles.lineHeight;\n        } else {\n          line = testLine;\n        }\n      }\n    }\n    // draw the last line\n    //  draw the underline\n    if (line.match(/\\s+$/)) {\n      // the last character of line is whitespace\n      var lineMetrics = this.ctx.measureText(line.replace(/\\s+$/, ''));\n      var lineWidth = lineMetrics.width;\n    } else {\n      var lineMetrics = this.ctx.measureText(line);\n      var lineWidth = lineMetrics.width;\n    }\n\n    var tempLine = {\n      lineText: line,\n      lineTextIndent: -0.2,\n      linePositionY: linePositionY,\n      lineMeasureWidth: lineWidth\n    }\n    this.lines.push(tempLine);\n    for (var i = 0; i < this.lines.length; i++) {\n      var tempLine = this.lines[i];\n      var myString = new GuitarString(\n        this.ctx,\n        new Point(tempLine.lineTextIndent, tempLine.linePositionY + this.underlinePosition),\n        new Point(tempLine.lineTextIndent + tempLine.lineMeasureWidth, tempLine.linePositionY + this.underlinePosition),\n        this.strokeWidth, this.underlineStyles['text-underline-color'], this.ratio);\n      this.myStrings.push(myString);\n    }\n\n    this.drawUnderline();\n    this.drawHoles();\n\n  }\n\n  MultipleUnderline.prototype.drawUnderline = function() {\n    // draw the underline\n    for (var i = 0; i < this.myStrings.length; i++) {\n      var tempString = this.myStrings[i];\n      // tempString.clear();\n      tempString.update();\n      tempString.draw();\n    }\n\n  };\n\n\n  MultipleUnderline.prototype.drawHoles = function() {\n    // draw the font stroke\n    for (var i = 0; i < this.lines.length; i++) {\n      var tempLine = this.lines[i];\n\n      this.ctx.globalCompositeOperation = \"destination-out\";\n      this.ctx.font = this.font;\n\n      this.ctx.fillStyle = 'green';\n      this.ctx.textBaseline = 'top';\n      this.ctx.fillText(tempLine.lineText, tempLine.lineTextIndent, tempLine.linePositionY);\n\n      this.ctx.lineWidth = 2 * this.ratio + this.strokeWidth * 3.6;\n      this.ctx.strokeStyle = 'blue';\n      this.ctx.strokeText(tempLine.lineText, tempLine.lineTextIndent, tempLine.linePositionY);\n\n    }\n  }\n\n  MultipleUnderline.prototype.clear = function() {\n    // clear\n    var lastMultipleRedrawActive = this.multipleRedrawActive;\n    this.multipleRedrawActive = false;\n    for (var i = 0; i < this.myStrings.length; i++) {\n      var tempString = this.myStrings[i];\n      // this.myString.clear();\n      // console.log(tempString.redrawActive);\n      if (tempString.redrawActive) {\n        this.multipleRedrawActive = true;\n      }\n    }\n    // console.log(this.multipleRedrawActive);\n    if (this.multipleRedrawActive) {\n      console.log('clear now!')\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // if (!lastMultipleRedrawActive && this.multipleRedrawActive) {\n    //     for(var i = 0; i < this.myStrings.length; i++) {\n    //         var tempString = this.myStrings[i];\n    //         tempString.drawLine();\n    //     }\n    // }\n\n  };\n\n  MultipleUnderline.prototype.update = function() {\n    //update\n  };\n\n\n  MultipleUnderline.prototype.draw = function() {\n    // draw\n    if (this.multipleRedrawActive) {\n      this.drawUnderline();\n      this.drawHoles();\n    }\n  };\n\n  return MultipleUnderline;\n}));\n","/* Universal Module Definition */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('multiplyValue', [], function() {\n      return (root.multiplyValue = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.MultiplyValue = factory();\n  }\n}(this, function() {\n\n  var multiplyValue = function(value, multiplier) {\n    var str = value;\n    var m = multiplier;\n    var result = str.match(/(\\d*\\.?\\d*)(.*)/);\n    //http://stackoverflow.com/questions/2868947/split1px-into-1px-1-px-in-javascript\n    return result[1] * m + result[2];\n  }\n\n  return multiplyValue;\n}));\n","/* Universal Module Definition */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('optimalStrokeWidthPos', [], function() {\n      return (root.optimalStrokeWidthPos = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.OptimalStrokeWidthPos = factory();\n  }\n}(this, function() {\n  var optimalStrokeWidthPos = function(strokeWidth, posY) {\n    if (strokeWidth < 1) {\n      posY = Math.round(posY - 0.5) + 0.5;\n    } else if (strokeWidth >= 1) {\n      strokeWidth = Math.round(strokeWidth);\n      if (strokeWidth % 2) {\n        // odd, posY -> 0.5\n        posY = Math.round(posY - 0.5) + 0.5;\n      } else {\n        // even, posY -> 1\n        posY = Math.round(posY);\n      }\n    }\n    return {\n      strokeWidth: strokeWidth,\n      posY: posY\n    }\n  }\n  return optimalStrokeWidthPos;\n}));\n","/* Universal Module Definition */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('point', [], function() {\n      return (root.point = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.Point = factory();\n  }\n}(this, function() {\n  var Point = function(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  return Point;\n}));\n","/* Universal Module Definition */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as a named AMD module.\n    define('singleUnderline', [], function() {\n      return (root.singleUnderline = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.SingleUnderline = factory();\n  }\n}(this, function() {\n  var multiplyValue = require('./multiply-value');\n  var optimalStrokeWidthPos = require('./optimal-stroke-width-pos');\n  var GuitarString = require('./guitar-string');\n  var Point = require('./point');\n\n  function SingleUnderline(element, underlineStyles, elementStyles) {\n    //ctor\n    this.element = element;\n\n    this.text = this.element.textContent;\n\n    this.underlineStyles = underlineStyles;\n\n    this.elementStyles = elementStyles;\n    this.redrawActive = false;\n\n    this.canvas = document.createElement(\"canvas\");\n    this.ctx = this.canvas.getContext('2d');\n\n    this.ratio = window.devicePixelRatio;\n    this.canvas.width = this.elementStyles.width * this.ratio;\n    this.canvas.height = this.elementStyles.height * this.ratio;\n    this.element.appendChild(this.canvas);\n    this.canvas.style.width = this.elementStyles.width + 'px';\n\n    this.ctx.font = this.font = this.elementStyles.fontStyle + ' ' + multiplyValue(this.elementStyles.fontSize, this.ratio) + ' ' + this.elementStyles.fontFamily;\n\n    // determine the text-underline-width / strokeWidth\n    var dotWidth = this.ctx.measureText('.')['width'];\n    if (this.underlineStyles['text-underline-width'] == \"auto\") {\n      // if set to auto, calculate the optimized width based on font\n      this.strokeWidth = dotWidth / 12;\n    } else {\n      //if set to px value, todo: other unit such as em?\n      this.strokeWidth = this.underlineStyles['text-underline-width'];\n      //get number value\n      this.strokeWidth = parseFloat(this.strokeWidth) * this.ratio;\n    }\n\n\n    // determine the text-underline-position / underlinePosition\n    // text-underline-position in ratio, todo: default and user set position ratio\n    if (this.underlineStyles['text-underline-position'] == \"auto\") {\n      // if set to auto, calculate the optimized width based on font\n      // console.log(this.elementStyles.baselinePositionRatio);\n      this.underlinePosition = parseFloat(this.elementStyles.height) * this.ratio * (1 - this.elementStyles.baselinePositionRatio +\n        this.elementStyles.baselinePositionRatio * 0.4) + this.strokeWidth / 2;\n    } else {\n      //if set to ratio value, todo: other unit such as em, px?\n      var userUnderlinePosition = parseFloat(this.underlineStyles['text-underline-position']);\n      // console.log(this.elementStyles.baselinePositionRatio);\n      this.underlinePosition = parseFloat(this.elementStyles.height) * this.ratio *\n        (1 - this.elementStyles.baselinePositionRatio +\n          this.elementStyles.baselinePositionRatio * userUnderlinePosition) + this.strokeWidth / 2;\n    }\n\n    var adjustValue = optimalStrokeWidthPos(this.strokeWidth, this.underlinePosition);\n    this.strokeWidth = adjustValue.strokeWidth;\n    this.underlinePosition = adjustValue.posY;\n\n    // todo: if last character is a space, remove the space\n    var textWidth = this.ctx.measureText(this.text).width;\n\n    this.myString = new GuitarString(this.ctx,\n      new Point(0, this.underlinePosition),\n      new Point(textWidth, this.underlinePosition),\n      this.strokeWidth, this.underlineStyles['text-underline-color'], this.ratio);\n    this.drawHoles();\n\n  }\n\n  SingleUnderline.prototype.drawUnderline = function() {\n    //  draw the underline\n    this.myString.draw();\n  }\n\n  SingleUnderline.prototype.drawHoles = function() {\n    // draw the font stroke\n    this.ctx.font = this.font;\n    this.ctx.textBaseline = 'top';\n\n    this.ctx.globalCompositeOperation = \"destination-out\";\n\n    this.ctx.lineWidth = 2 * this.ratio + this.strokeWidth * 3.6;\n    this.ctx.strokeStyle = 'blue';\n    this.ctx.beginPath();\n    this.ctx.strokeText(this.text, -0.2, 0);\n\n    this.ctx.fillStyle = 'green';\n    this.ctx.beginPath();\n    this.ctx.fillText(this.text, -0.2, 0);\n  }\n\n  SingleUnderline.prototype.clear = function() {\n    this.redrawActive = this.myString.redrawActive;\n    // clear\n    if (this.myString.redrawActive) {\n      // this.myString.clear();\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n  };\n\n\n  SingleUnderline.prototype.update = function() {\n    // update\n    if (this.myString.redrawActive) {\n      this.myString.update();\n    }\n  };\n\n\n  SingleUnderline.prototype.draw = function() {\n    // draw\n    if (this.redrawActive) {\n      this.drawUnderline();\n      this.drawHoles();\n    }\n  };\n\n  return SingleUnderline;\n}));\n"],"sourceRoot":"/source/"}